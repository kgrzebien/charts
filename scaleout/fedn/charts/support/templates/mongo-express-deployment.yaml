apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: mongo-express
  name: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo-express
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/fedn_default: "true"
        io.kompose.service: mongo-express
    spec:
      containers:
        - env:
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_BASICAUTH_PASSWORD
                  name: mongoexpress-env
            - name: ME_CONFIG_BASICAUTH_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_BASICAUTH_USERNAME
                  name: mongoexpress-env
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_MONGODB_ADMINPASSWORD
                  name: mongoexpress-env
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_MONGODB_ADMINUSERNAME
                  name: mongoexpress-env
            - name: ME_CONFIG_MONGODB_PORT
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_MONGODB_PORT
                  name: mongoexpress-env
            - name: ME_CONFIG_MONGODB_SERVER
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_MONGODB_SERVER
                  name: mongoexpress-env
          image: mongo-express:latest
          name: mongo-express
          ports:
            - containerPort: 8081
          resources: {}
      restartPolicy: Always
status: {}
